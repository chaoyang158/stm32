ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"oled.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.WriteCmd,"ax",%progbits
  18              		.align	1
  19              		.global	WriteCmd
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	WriteCmd:
  25              	.LFB65:
  26              		.file 1 "oled/oled.c"
   1:oled/oled.c   **** #include "oled.h"
   2:oled/oled.c   **** #include "oledfont.h"
   3:oled/oled.c   **** 
   4:oled/oled.c   **** // 几个变量声明
   5:oled/oled.c   **** // uint8_t **Hzk;
   6:oled/oled.c   **** 
   7:oled/oled.c   **** // 初始化命令
   8:oled/oled.c   **** uint8_t CMD_Data[] = {
   9:oled/oled.c   ****     0xAE, 0x00, 0x10, 0x40, 0xB0, 0x81, 0xFF, 0xA1, 0xA6, 0xA8, 0x3F,
  10:oled/oled.c   **** 
  11:oled/oled.c   ****     0xC8, 0xD3, 0x00, 0xD5, 0x80, 0xD8, 0x05, 0xD9, 0xF1, 0xDA, 0x12,
  12:oled/oled.c   **** 
  13:oled/oled.c   ****     0xD8, 0x30, 0x8D, 0x14, 0xAF};
  14:oled/oled.c   **** void WriteCmd()
  15:oled/oled.c   **** {
  27              		.loc 1 15 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  16:oled/oled.c   ****   uint8_t i = 0;
  39              		.loc 1 16 3 view .LVU1
  40              	.LVL0:
  17:oled/oled.c   ****   for (i = 0; i < 27; i++)
  41              		.loc 1 17 3 view .LVU2
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 2


  42              		.loc 1 17 10 is_stmt 0 view .LVU3
  43 0004 0024     		movs	r4, #0
  44              		.loc 1 17 3 view .LVU4
  45 0006 0EE0     		b	.L2
  46              	.LVL1:
  47              	.L3:
  18:oled/oled.c   ****   {
  19:oled/oled.c   ****     HAL_I2C_Mem_Write(&hi2c1, 0x78, 0x00, I2C_MEMADD_SIZE_8BIT, CMD_Data + i, 1, 0x100);
  48              		.loc 1 19 5 is_stmt 1 discriminator 3 view .LVU5
  49 0008 4FF48073 		mov	r3, #256
  50 000c 0293     		str	r3, [sp, #8]
  51 000e 0123     		movs	r3, #1
  52 0010 0193     		str	r3, [sp, #4]
  53 0012 074A     		ldr	r2, .L5
  54 0014 2244     		add	r2, r2, r4
  55 0016 0092     		str	r2, [sp]
  56 0018 0022     		movs	r2, #0
  57 001a 7821     		movs	r1, #120
  58 001c 0548     		ldr	r0, .L5+4
  59 001e FFF7FEFF 		bl	HAL_I2C_Mem_Write
  60              	.LVL2:
  17:oled/oled.c   ****   for (i = 0; i < 27; i++)
  61              		.loc 1 17 23 discriminator 3 view .LVU6
  17:oled/oled.c   ****   for (i = 0; i < 27; i++)
  62              		.loc 1 17 24 is_stmt 0 discriminator 3 view .LVU7
  63 0022 0134     		adds	r4, r4, #1
  64              	.LVL3:
  17:oled/oled.c   ****   for (i = 0; i < 27; i++)
  65              		.loc 1 17 24 discriminator 3 view .LVU8
  66 0024 E4B2     		uxtb	r4, r4
  67              	.LVL4:
  68              	.L2:
  17:oled/oled.c   ****   for (i = 0; i < 27; i++)
  69              		.loc 1 17 15 is_stmt 1 discriminator 1 view .LVU9
  17:oled/oled.c   ****   for (i = 0; i < 27; i++)
  70              		.loc 1 17 3 is_stmt 0 discriminator 1 view .LVU10
  71 0026 1A2C     		cmp	r4, #26
  72 0028 EED9     		bls	.L3
  20:oled/oled.c   ****   }
  21:oled/oled.c   **** }
  73              		.loc 1 21 1 view .LVU11
  74 002a 04B0     		add	sp, sp, #16
  75              	.LCFI2:
  76              		.cfi_def_cfa_offset 8
  77              		@ sp needed
  78 002c 10BD     		pop	{r4, pc}
  79              	.LVL5:
  80              	.L6:
  81              		.loc 1 21 1 view .LVU12
  82 002e 00BF     		.align	2
  83              	.L5:
  84 0030 00000000 		.word	.LANCHOR0
  85 0034 00000000 		.word	hi2c1
  86              		.cfi_endproc
  87              	.LFE65:
  89              		.section	.text.OLED_WR_CMD,"ax",%progbits
  90              		.align	1
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 3


  91              		.global	OLED_WR_CMD
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	OLED_WR_CMD:
  97              	.LVL6:
  98              	.LFB66:
  22:oled/oled.c   **** // 向设备写控制命令
  23:oled/oled.c   **** void OLED_WR_CMD(uint8_t cmd)
  24:oled/oled.c   **** {
  99              		.loc 1 24 1 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 8
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		.loc 1 24 1 is_stmt 0 view .LVU14
 104 0000 00B5     		push	{lr}
 105              	.LCFI3:
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 14, -4
 108 0002 87B0     		sub	sp, sp, #28
 109              	.LCFI4:
 110              		.cfi_def_cfa_offset 32
 111 0004 8DF81700 		strb	r0, [sp, #23]
  25:oled/oled.c   ****   HAL_I2C_Mem_Write(&hi2c1, 0x78, 0x00, I2C_MEMADD_SIZE_8BIT, &cmd, 1, 0x100);
 112              		.loc 1 25 3 is_stmt 1 view .LVU15
 113 0008 4FF48073 		mov	r3, #256
 114 000c 0293     		str	r3, [sp, #8]
 115 000e 0123     		movs	r3, #1
 116 0010 0193     		str	r3, [sp, #4]
 117 0012 0DF11702 		add	r2, sp, #23
 118 0016 0092     		str	r2, [sp]
 119 0018 0022     		movs	r2, #0
 120 001a 7821     		movs	r1, #120
 121 001c 0248     		ldr	r0, .L9
 122              	.LVL7:
 123              		.loc 1 25 3 is_stmt 0 view .LVU16
 124 001e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 125              	.LVL8:
  26:oled/oled.c   **** }
 126              		.loc 1 26 1 view .LVU17
 127 0022 07B0     		add	sp, sp, #28
 128              	.LCFI5:
 129              		.cfi_def_cfa_offset 4
 130              		@ sp needed
 131 0024 5DF804FB 		ldr	pc, [sp], #4
 132              	.L10:
 133              		.align	2
 134              	.L9:
 135 0028 00000000 		.word	hi2c1
 136              		.cfi_endproc
 137              	.LFE66:
 139              		.section	.text.OLED_WR_DATA,"ax",%progbits
 140              		.align	1
 141              		.global	OLED_WR_DATA
 142              		.syntax unified
 143              		.thumb
 144              		.thumb_func
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 4


 146              	OLED_WR_DATA:
 147              	.LVL9:
 148              	.LFB67:
  27:oled/oled.c   **** // 向设备写数据
  28:oled/oled.c   **** void OLED_WR_DATA(uint8_t data)
  29:oled/oled.c   **** {
 149              		.loc 1 29 1 is_stmt 1 view -0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 8
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		.loc 1 29 1 is_stmt 0 view .LVU19
 154 0000 00B5     		push	{lr}
 155              	.LCFI6:
 156              		.cfi_def_cfa_offset 4
 157              		.cfi_offset 14, -4
 158 0002 87B0     		sub	sp, sp, #28
 159              	.LCFI7:
 160              		.cfi_def_cfa_offset 32
 161 0004 8DF81700 		strb	r0, [sp, #23]
  30:oled/oled.c   ****   HAL_I2C_Mem_Write(&hi2c1, 0x78, 0x40, I2C_MEMADD_SIZE_8BIT, &data, 1, 0x100);
 162              		.loc 1 30 3 is_stmt 1 view .LVU20
 163 0008 4FF48073 		mov	r3, #256
 164 000c 0293     		str	r3, [sp, #8]
 165 000e 0123     		movs	r3, #1
 166 0010 0193     		str	r3, [sp, #4]
 167 0012 0DF11702 		add	r2, sp, #23
 168 0016 0092     		str	r2, [sp]
 169 0018 4022     		movs	r2, #64
 170 001a 7821     		movs	r1, #120
 171 001c 0248     		ldr	r0, .L13
 172              	.LVL10:
 173              		.loc 1 30 3 is_stmt 0 view .LVU21
 174 001e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 175              	.LVL11:
  31:oled/oled.c   **** }
 176              		.loc 1 31 1 view .LVU22
 177 0022 07B0     		add	sp, sp, #28
 178              	.LCFI8:
 179              		.cfi_def_cfa_offset 4
 180              		@ sp needed
 181 0024 5DF804FB 		ldr	pc, [sp], #4
 182              	.L14:
 183              		.align	2
 184              	.L13:
 185 0028 00000000 		.word	hi2c1
 186              		.cfi_endproc
 187              	.LFE67:
 189              		.section	.text.OLED_Init,"ax",%progbits
 190              		.align	1
 191              		.global	OLED_Init
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
 196              	OLED_Init:
 197              	.LFB68:
  32:oled/oled.c   **** // 初始化oled屏幕
  33:oled/oled.c   **** void OLED_Init(void)
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 5


  34:oled/oled.c   **** {
 198              		.loc 1 34 1 is_stmt 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 0000 08B5     		push	{r3, lr}
 203              	.LCFI9:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 3, -8
 206              		.cfi_offset 14, -4
  35:oled/oled.c   ****   HAL_Delay(200);
 207              		.loc 1 35 3 view .LVU24
 208 0002 C820     		movs	r0, #200
 209 0004 FFF7FEFF 		bl	HAL_Delay
 210              	.LVL12:
  36:oled/oled.c   ****   WriteCmd();
 211              		.loc 1 36 3 view .LVU25
 212 0008 FFF7FEFF 		bl	WriteCmd
 213              	.LVL13:
  37:oled/oled.c   **** }
 214              		.loc 1 37 1 is_stmt 0 view .LVU26
 215 000c 08BD     		pop	{r3, pc}
 216              		.cfi_endproc
 217              	.LFE68:
 219              		.section	.text.OLED_Clear,"ax",%progbits
 220              		.align	1
 221              		.global	OLED_Clear
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 226              	OLED_Clear:
 227              	.LFB69:
  38:oled/oled.c   **** // 清屏size12 size16要清两行，其他函数有类似情况
  39:oled/oled.c   **** void OLED_Clear()
  40:oled/oled.c   **** {
 228              		.loc 1 40 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232 0000 38B5     		push	{r3, r4, r5, lr}
 233              	.LCFI10:
 234              		.cfi_def_cfa_offset 16
 235              		.cfi_offset 3, -16
 236              		.cfi_offset 4, -12
 237              		.cfi_offset 5, -8
 238              		.cfi_offset 14, -4
  41:oled/oled.c   ****   uint8_t i, n;
 239              		.loc 1 41 3 view .LVU28
  42:oled/oled.c   ****   for (i = 0; i < 8; i++)
 240              		.loc 1 42 3 view .LVU29
 241              	.LVL14:
 242              		.loc 1 42 10 is_stmt 0 view .LVU30
 243 0002 0025     		movs	r5, #0
 244              		.loc 1 42 3 view .LVU31
 245 0004 09E0     		b	.L18
 246              	.LVL15:
 247              	.L20:
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 6


  43:oled/oled.c   ****   {
  44:oled/oled.c   ****     OLED_WR_CMD(0xb0 + i);
  45:oled/oled.c   ****     OLED_WR_CMD(0x00);
  46:oled/oled.c   ****     OLED_WR_CMD(0x10);
  47:oled/oled.c   ****     for (n = 0; n < 128; n++)
  48:oled/oled.c   ****       OLED_WR_DATA(0);
 248              		.loc 1 48 7 is_stmt 1 discriminator 3 view .LVU32
 249 0006 0020     		movs	r0, #0
 250 0008 FFF7FEFF 		bl	OLED_WR_DATA
 251              	.LVL16:
  47:oled/oled.c   ****       OLED_WR_DATA(0);
 252              		.loc 1 47 26 discriminator 3 view .LVU33
  47:oled/oled.c   ****       OLED_WR_DATA(0);
 253              		.loc 1 47 27 is_stmt 0 discriminator 3 view .LVU34
 254 000c 0134     		adds	r4, r4, #1
 255              	.LVL17:
  47:oled/oled.c   ****       OLED_WR_DATA(0);
 256              		.loc 1 47 27 discriminator 3 view .LVU35
 257 000e E4B2     		uxtb	r4, r4
 258              	.LVL18:
 259              	.L19:
  47:oled/oled.c   ****       OLED_WR_DATA(0);
 260              		.loc 1 47 17 is_stmt 1 discriminator 1 view .LVU36
  47:oled/oled.c   ****       OLED_WR_DATA(0);
 261              		.loc 1 47 5 is_stmt 0 discriminator 1 view .LVU37
 262 0010 14F0800F 		tst	r4, #128
 263 0014 F7D0     		beq	.L20
  42:oled/oled.c   ****   for (i = 0; i < 8; i++)
 264              		.loc 1 42 22 is_stmt 1 discriminator 2 view .LVU38
  42:oled/oled.c   ****   for (i = 0; i < 8; i++)
 265              		.loc 1 42 23 is_stmt 0 discriminator 2 view .LVU39
 266 0016 0135     		adds	r5, r5, #1
 267              	.LVL19:
  42:oled/oled.c   ****   for (i = 0; i < 8; i++)
 268              		.loc 1 42 23 discriminator 2 view .LVU40
 269 0018 EDB2     		uxtb	r5, r5
 270              	.LVL20:
 271              	.L18:
  42:oled/oled.c   ****   for (i = 0; i < 8; i++)
 272              		.loc 1 42 15 is_stmt 1 discriminator 1 view .LVU41
  42:oled/oled.c   ****   for (i = 0; i < 8; i++)
 273              		.loc 1 42 3 is_stmt 0 discriminator 1 view .LVU42
 274 001a 072D     		cmp	r5, #7
 275 001c 0CD8     		bhi	.L23
  44:oled/oled.c   ****     OLED_WR_CMD(0x00);
 276              		.loc 1 44 5 is_stmt 1 view .LVU43
 277 001e A5F15000 		sub	r0, r5, #80
 278 0022 C0B2     		uxtb	r0, r0
 279 0024 FFF7FEFF 		bl	OLED_WR_CMD
 280              	.LVL21:
  45:oled/oled.c   ****     OLED_WR_CMD(0x10);
 281              		.loc 1 45 5 view .LVU44
 282 0028 0020     		movs	r0, #0
 283 002a FFF7FEFF 		bl	OLED_WR_CMD
 284              	.LVL22:
  46:oled/oled.c   ****     for (n = 0; n < 128; n++)
 285              		.loc 1 46 5 view .LVU45
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 7


 286 002e 1020     		movs	r0, #16
 287 0030 FFF7FEFF 		bl	OLED_WR_CMD
 288              	.LVL23:
  47:oled/oled.c   ****       OLED_WR_DATA(0);
 289              		.loc 1 47 5 view .LVU46
  47:oled/oled.c   ****       OLED_WR_DATA(0);
 290              		.loc 1 47 12 is_stmt 0 view .LVU47
 291 0034 0024     		movs	r4, #0
  47:oled/oled.c   ****       OLED_WR_DATA(0);
 292              		.loc 1 47 5 view .LVU48
 293 0036 EBE7     		b	.L19
 294              	.LVL24:
 295              	.L23:
  49:oled/oled.c   ****   }
  50:oled/oled.c   **** }
 296              		.loc 1 50 1 view .LVU49
 297 0038 38BD     		pop	{r3, r4, r5, pc}
 298              		.loc 1 50 1 view .LVU50
 299              		.cfi_endproc
 300              	.LFE69:
 302              		.section	.text.OLED_Clearrow,"ax",%progbits
 303              		.align	1
 304              		.global	OLED_Clearrow
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 309              	OLED_Clearrow:
 310              	.LVL25:
 311              	.LFB70:
  51:oled/oled.c   **** // 清行
  52:oled/oled.c   **** void OLED_Clearrow(uint8_t i)
  53:oled/oled.c   **** {
 312              		.loc 1 53 1 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		.loc 1 53 1 is_stmt 0 view .LVU52
 317 0000 10B5     		push	{r4, lr}
 318              	.LCFI11:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 4, -8
 321              		.cfi_offset 14, -4
  54:oled/oled.c   ****   uint8_t n;
 322              		.loc 1 54 3 is_stmt 1 view .LVU53
  55:oled/oled.c   ****   OLED_WR_CMD(0xb0 + i);
 323              		.loc 1 55 3 view .LVU54
 324 0002 5038     		subs	r0, r0, #80
 325              	.LVL26:
 326              		.loc 1 55 3 is_stmt 0 view .LVU55
 327 0004 C0B2     		uxtb	r0, r0
 328 0006 FFF7FEFF 		bl	OLED_WR_CMD
 329              	.LVL27:
  56:oled/oled.c   ****   OLED_WR_CMD(0x00);
 330              		.loc 1 56 3 is_stmt 1 view .LVU56
 331 000a 0020     		movs	r0, #0
 332 000c FFF7FEFF 		bl	OLED_WR_CMD
 333              	.LVL28:
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 8


  57:oled/oled.c   ****   OLED_WR_CMD(0x10);
 334              		.loc 1 57 3 view .LVU57
 335 0010 1020     		movs	r0, #16
 336 0012 FFF7FEFF 		bl	OLED_WR_CMD
 337              	.LVL29:
  58:oled/oled.c   ****   for (n = 0; n < 128; n++)
 338              		.loc 1 58 3 view .LVU58
 339              		.loc 1 58 10 is_stmt 0 view .LVU59
 340 0016 0024     		movs	r4, #0
 341              		.loc 1 58 3 view .LVU60
 342 0018 04E0     		b	.L25
 343              	.LVL30:
 344              	.L26:
  59:oled/oled.c   ****     OLED_WR_DATA(0);
 345              		.loc 1 59 5 is_stmt 1 discriminator 3 view .LVU61
 346 001a 0020     		movs	r0, #0
 347 001c FFF7FEFF 		bl	OLED_WR_DATA
 348              	.LVL31:
  58:oled/oled.c   ****   for (n = 0; n < 128; n++)
 349              		.loc 1 58 24 discriminator 3 view .LVU62
  58:oled/oled.c   ****   for (n = 0; n < 128; n++)
 350              		.loc 1 58 25 is_stmt 0 discriminator 3 view .LVU63
 351 0020 0134     		adds	r4, r4, #1
 352              	.LVL32:
  58:oled/oled.c   ****   for (n = 0; n < 128; n++)
 353              		.loc 1 58 25 discriminator 3 view .LVU64
 354 0022 E4B2     		uxtb	r4, r4
 355              	.LVL33:
 356              	.L25:
  58:oled/oled.c   ****   for (n = 0; n < 128; n++)
 357              		.loc 1 58 15 is_stmt 1 discriminator 1 view .LVU65
  58:oled/oled.c   ****   for (n = 0; n < 128; n++)
 358              		.loc 1 58 3 is_stmt 0 discriminator 1 view .LVU66
 359 0024 14F0800F 		tst	r4, #128
 360 0028 F7D0     		beq	.L26
  60:oled/oled.c   **** }
 361              		.loc 1 60 1 view .LVU67
 362 002a 10BD     		pop	{r4, pc}
 363              		.loc 1 60 1 view .LVU68
 364              		.cfi_endproc
 365              	.LFE70:
 367              		.section	.text.OLED_Display_On,"ax",%progbits
 368              		.align	1
 369              		.global	OLED_Display_On
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 374              	OLED_Display_On:
 375              	.LFB71:
  61:oled/oled.c   **** // 开启OLED显示
  62:oled/oled.c   **** void OLED_Display_On(void)
  63:oled/oled.c   **** {
 376              		.loc 1 63 1 is_stmt 1 view -0
 377              		.cfi_startproc
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 9


 381              	.LCFI12:
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 3, -8
 384              		.cfi_offset 14, -4
  64:oled/oled.c   ****   OLED_WR_CMD(0X8D); // SET DCDC命令
 385              		.loc 1 64 3 view .LVU70
 386 0002 8D20     		movs	r0, #141
 387 0004 FFF7FEFF 		bl	OLED_WR_CMD
 388              	.LVL34:
  65:oled/oled.c   ****   OLED_WR_CMD(0X14); // DCDC ON
 389              		.loc 1 65 3 view .LVU71
 390 0008 1420     		movs	r0, #20
 391 000a FFF7FEFF 		bl	OLED_WR_CMD
 392              	.LVL35:
  66:oled/oled.c   ****   OLED_WR_CMD(0XAF); // DISPLAY ON
 393              		.loc 1 66 3 view .LVU72
 394 000e AF20     		movs	r0, #175
 395 0010 FFF7FEFF 		bl	OLED_WR_CMD
 396              	.LVL36:
  67:oled/oled.c   **** }
 397              		.loc 1 67 1 is_stmt 0 view .LVU73
 398 0014 08BD     		pop	{r3, pc}
 399              		.cfi_endproc
 400              	.LFE71:
 402              		.section	.text.OLED_Display_Off,"ax",%progbits
 403              		.align	1
 404              		.global	OLED_Display_Off
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 409              	OLED_Display_Off:
 410              	.LFB72:
  68:oled/oled.c   **** // 关闭OLED显示
  69:oled/oled.c   **** void OLED_Display_Off(void)
  70:oled/oled.c   **** {
 411              		.loc 1 70 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415 0000 08B5     		push	{r3, lr}
 416              	.LCFI13:
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 3, -8
 419              		.cfi_offset 14, -4
  71:oled/oled.c   ****   OLED_WR_CMD(0X8D); // SET DCDC命令
 420              		.loc 1 71 3 view .LVU75
 421 0002 8D20     		movs	r0, #141
 422 0004 FFF7FEFF 		bl	OLED_WR_CMD
 423              	.LVL37:
  72:oled/oled.c   ****   OLED_WR_CMD(0X10); // DCDC OFF
 424              		.loc 1 72 3 view .LVU76
 425 0008 1020     		movs	r0, #16
 426 000a FFF7FEFF 		bl	OLED_WR_CMD
 427              	.LVL38:
  73:oled/oled.c   ****   OLED_WR_CMD(0XAE); // DISPLAY OFF
 428              		.loc 1 73 3 view .LVU77
 429 000e AE20     		movs	r0, #174
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 10


 430 0010 FFF7FEFF 		bl	OLED_WR_CMD
 431              	.LVL39:
  74:oled/oled.c   **** }
 432              		.loc 1 74 1 is_stmt 0 view .LVU78
 433 0014 08BD     		pop	{r3, pc}
 434              		.cfi_endproc
 435              	.LFE72:
 437              		.section	.text.OLED_Set_Pos,"ax",%progbits
 438              		.align	1
 439              		.global	OLED_Set_Pos
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 444              	OLED_Set_Pos:
 445              	.LVL40:
 446              	.LFB73:
  75:oled/oled.c   **** void OLED_Set_Pos(uint8_t x, uint8_t y)
  76:oled/oled.c   **** {
 447              		.loc 1 76 1 is_stmt 1 view -0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451              		.loc 1 76 1 is_stmt 0 view .LVU80
 452 0000 10B5     		push	{r4, lr}
 453              	.LCFI14:
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 4, -8
 456              		.cfi_offset 14, -4
 457 0002 0446     		mov	r4, r0
  77:oled/oled.c   ****   OLED_WR_CMD(0xb0 + y);
 458              		.loc 1 77 3 is_stmt 1 view .LVU81
 459 0004 A1F15000 		sub	r0, r1, #80
 460              	.LVL41:
 461              		.loc 1 77 3 is_stmt 0 view .LVU82
 462 0008 C0B2     		uxtb	r0, r0
 463 000a FFF7FEFF 		bl	OLED_WR_CMD
 464              	.LVL42:
  78:oled/oled.c   ****   OLED_WR_CMD(((x & 0xf0) >> 4) | 0x10);
 465              		.loc 1 78 3 is_stmt 1 view .LVU83
 466              		.loc 1 78 27 is_stmt 0 view .LVU84
 467 000e 2009     		lsrs	r0, r4, #4
 468              		.loc 1 78 3 view .LVU85
 469 0010 40F01000 		orr	r0, r0, #16
 470 0014 FFF7FEFF 		bl	OLED_WR_CMD
 471              	.LVL43:
  79:oled/oled.c   ****   OLED_WR_CMD(x & 0x0f);
 472              		.loc 1 79 3 is_stmt 1 view .LVU86
 473 0018 04F00F00 		and	r0, r4, #15
 474 001c FFF7FEFF 		bl	OLED_WR_CMD
 475              	.LVL44:
  80:oled/oled.c   **** }
 476              		.loc 1 80 1 is_stmt 0 view .LVU87
 477 0020 10BD     		pop	{r4, pc}
 478              		.cfi_endproc
 479              	.LFE73:
 481              		.section	.text.OLED_On,"ax",%progbits
 482              		.align	1
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 11


 483              		.global	OLED_On
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 488              	OLED_On:
 489              	.LFB74:
  81:oled/oled.c   **** 
  82:oled/oled.c   **** void OLED_On(void)
  83:oled/oled.c   **** {
 490              		.loc 1 83 1 is_stmt 1 view -0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494 0000 38B5     		push	{r3, r4, r5, lr}
 495              	.LCFI15:
 496              		.cfi_def_cfa_offset 16
 497              		.cfi_offset 3, -16
 498              		.cfi_offset 4, -12
 499              		.cfi_offset 5, -8
 500              		.cfi_offset 14, -4
  84:oled/oled.c   ****   uint8_t i, n;
 501              		.loc 1 84 3 view .LVU89
  85:oled/oled.c   ****   for (i = 0; i < 8; i++)
 502              		.loc 1 85 3 view .LVU90
 503              	.LVL45:
 504              		.loc 1 85 10 is_stmt 0 view .LVU91
 505 0002 0025     		movs	r5, #0
 506              		.loc 1 85 3 view .LVU92
 507 0004 09E0     		b	.L35
 508              	.LVL46:
 509              	.L37:
  86:oled/oled.c   ****   {
  87:oled/oled.c   ****     OLED_WR_CMD(0xb0 + i); // 设置页地址（0~7）
  88:oled/oled.c   ****     OLED_WR_CMD(0x00);     // 设置显示位置—列低地址
  89:oled/oled.c   ****     OLED_WR_CMD(0x10);     // 设置显示位置—列高地址
  90:oled/oled.c   ****     for (n = 0; n < 128; n++)
  91:oled/oled.c   ****       OLED_WR_DATA(1);
 510              		.loc 1 91 7 is_stmt 1 discriminator 3 view .LVU93
 511 0006 0120     		movs	r0, #1
 512 0008 FFF7FEFF 		bl	OLED_WR_DATA
 513              	.LVL47:
  90:oled/oled.c   ****       OLED_WR_DATA(1);
 514              		.loc 1 90 26 discriminator 3 view .LVU94
  90:oled/oled.c   ****       OLED_WR_DATA(1);
 515              		.loc 1 90 27 is_stmt 0 discriminator 3 view .LVU95
 516 000c 0134     		adds	r4, r4, #1
 517              	.LVL48:
  90:oled/oled.c   ****       OLED_WR_DATA(1);
 518              		.loc 1 90 27 discriminator 3 view .LVU96
 519 000e E4B2     		uxtb	r4, r4
 520              	.LVL49:
 521              	.L36:
  90:oled/oled.c   ****       OLED_WR_DATA(1);
 522              		.loc 1 90 17 is_stmt 1 discriminator 1 view .LVU97
  90:oled/oled.c   ****       OLED_WR_DATA(1);
 523              		.loc 1 90 5 is_stmt 0 discriminator 1 view .LVU98
 524 0010 14F0800F 		tst	r4, #128
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 12


 525 0014 F7D0     		beq	.L37
  85:oled/oled.c   ****   for (i = 0; i < 8; i++)
 526              		.loc 1 85 22 is_stmt 1 discriminator 2 view .LVU99
  85:oled/oled.c   ****   for (i = 0; i < 8; i++)
 527              		.loc 1 85 23 is_stmt 0 discriminator 2 view .LVU100
 528 0016 0135     		adds	r5, r5, #1
 529              	.LVL50:
  85:oled/oled.c   ****   for (i = 0; i < 8; i++)
 530              		.loc 1 85 23 discriminator 2 view .LVU101
 531 0018 EDB2     		uxtb	r5, r5
 532              	.LVL51:
 533              	.L35:
  85:oled/oled.c   ****   for (i = 0; i < 8; i++)
 534              		.loc 1 85 15 is_stmt 1 discriminator 1 view .LVU102
  85:oled/oled.c   ****   for (i = 0; i < 8; i++)
 535              		.loc 1 85 3 is_stmt 0 discriminator 1 view .LVU103
 536 001a 072D     		cmp	r5, #7
 537 001c 0CD8     		bhi	.L40
  87:oled/oled.c   ****     OLED_WR_CMD(0x00);     // 设置显示位置—列低地址
 538              		.loc 1 87 5 is_stmt 1 view .LVU104
 539 001e A5F15000 		sub	r0, r5, #80
 540 0022 C0B2     		uxtb	r0, r0
 541 0024 FFF7FEFF 		bl	OLED_WR_CMD
 542              	.LVL52:
  88:oled/oled.c   ****     OLED_WR_CMD(0x10);     // 设置显示位置—列高地址
 543              		.loc 1 88 5 view .LVU105
 544 0028 0020     		movs	r0, #0
 545 002a FFF7FEFF 		bl	OLED_WR_CMD
 546              	.LVL53:
  89:oled/oled.c   ****     for (n = 0; n < 128; n++)
 547              		.loc 1 89 5 view .LVU106
 548 002e 1020     		movs	r0, #16
 549 0030 FFF7FEFF 		bl	OLED_WR_CMD
 550              	.LVL54:
  90:oled/oled.c   ****       OLED_WR_DATA(1);
 551              		.loc 1 90 5 view .LVU107
  90:oled/oled.c   ****       OLED_WR_DATA(1);
 552              		.loc 1 90 12 is_stmt 0 view .LVU108
 553 0034 0024     		movs	r4, #0
  90:oled/oled.c   ****       OLED_WR_DATA(1);
 554              		.loc 1 90 5 view .LVU109
 555 0036 EBE7     		b	.L36
 556              	.LVL55:
 557              	.L40:
  92:oled/oled.c   ****   } // 更新显示
  93:oled/oled.c   **** }
 558              		.loc 1 93 1 view .LVU110
 559 0038 38BD     		pop	{r3, r4, r5, pc}
 560              		.loc 1 93 1 view .LVU111
 561              		.cfi_endproc
 562              	.LFE74:
 564              		.section	.text.oled_pow,"ax",%progbits
 565              		.align	1
 566              		.global	oled_pow
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 13


 571              	oled_pow:
 572              	.LVL56:
 573              	.LFB75:
  94:oled/oled.c   **** unsigned int oled_pow(uint8_t m, uint8_t n)
  95:oled/oled.c   **** {
 574              		.loc 1 95 1 is_stmt 1 view -0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579              		.loc 1 95 1 is_stmt 0 view .LVU113
 580 0000 0246     		mov	r2, r0
  96:oled/oled.c   ****   unsigned int result = 1;
 581              		.loc 1 96 3 is_stmt 1 view .LVU114
 582              	.LVL57:
  97:oled/oled.c   ****   while (n--)
 583              		.loc 1 97 3 view .LVU115
  96:oled/oled.c   ****   unsigned int result = 1;
 584              		.loc 1 96 16 is_stmt 0 view .LVU116
 585 0002 0120     		movs	r0, #1
 586              	.LVL58:
 587              		.loc 1 97 9 view .LVU117
 588 0004 02E0     		b	.L42
 589              	.LVL59:
 590              	.L43:
  98:oled/oled.c   ****     result *= m;
 591              		.loc 1 98 5 is_stmt 1 view .LVU118
 592              		.loc 1 98 12 is_stmt 0 view .LVU119
 593 0006 02FB00F0 		mul	r0, r2, r0
 594              	.LVL60:
  97:oled/oled.c   ****   while (n--)
 595              		.loc 1 97 11 view .LVU120
 596 000a 1946     		mov	r1, r3
 597              	.LVL61:
 598              	.L42:
  97:oled/oled.c   ****   while (n--)
 599              		.loc 1 97 9 is_stmt 1 view .LVU121
  97:oled/oled.c   ****   while (n--)
 600              		.loc 1 97 11 is_stmt 0 view .LVU122
 601 000c 4B1E     		subs	r3, r1, #1
 602 000e DBB2     		uxtb	r3, r3
 603              	.LVL62:
  97:oled/oled.c   ****   while (n--)
 604              		.loc 1 97 9 view .LVU123
 605 0010 0029     		cmp	r1, #0
 606 0012 F8D1     		bne	.L43
  99:oled/oled.c   ****   return result;
 607              		.loc 1 99 3 is_stmt 1 view .LVU124
 100:oled/oled.c   **** }
 608              		.loc 1 100 1 is_stmt 0 view .LVU125
 609 0014 7047     		bx	lr
 610              		.cfi_endproc
 611              	.LFE75:
 613              		.section	.text.OLED_ShowChar,"ax",%progbits
 614              		.align	1
 615              		.global	OLED_ShowChar
 616              		.syntax unified
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 14


 617              		.thumb
 618              		.thumb_func
 620              	OLED_ShowChar:
 621              	.LVL63:
 622              	.LFB76:
 101:oled/oled.c   **** 
 102:oled/oled.c   **** // 在指定位置显示一个字符,包括部分字符
 103:oled/oled.c   **** // x:0~127
 104:oled/oled.c   **** // y:0~63
 105:oled/oled.c   **** // mode:0,反白显示;1,正常显示
 106:oled/oled.c   **** // size:选择字体 16/12
 107:oled/oled.c   **** void OLED_ShowChar(uint8_t x, uint8_t y, uint8_t chr, uint8_t Char_Size)
 108:oled/oled.c   **** {
 623              		.loc 1 108 1 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		.loc 1 108 1 is_stmt 0 view .LVU127
 628 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 629              	.LCFI16:
 630              		.cfi_def_cfa_offset 24
 631              		.cfi_offset 3, -24
 632              		.cfi_offset 4, -20
 633              		.cfi_offset 5, -16
 634              		.cfi_offset 6, -12
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 0746     		mov	r7, r0
 638 0004 0E46     		mov	r6, r1
 109:oled/oled.c   ****   unsigned char c = 0, i = 0;
 639              		.loc 1 109 3 is_stmt 1 view .LVU128
 640              	.LVL64:
 110:oled/oled.c   ****   c = chr - ' '; // 得到偏移后的值
 641              		.loc 1 110 3 view .LVU129
 642              		.loc 1 110 5 is_stmt 0 view .LVU130
 643 0006 203A     		subs	r2, r2, #32
 644              	.LVL65:
 645              		.loc 1 110 5 view .LVU131
 646 0008 D5B2     		uxtb	r5, r2
 647              	.LVL66:
 111:oled/oled.c   ****   if (x > 128 - 1)
 648              		.loc 1 111 3 is_stmt 1 view .LVU132
 649              		.loc 1 111 6 is_stmt 0 view .LVU133
 650 000a 10F0800F 		tst	r0, #128
 651 000e 07D1     		bne	.L55
 652              	.LVL67:
 653              	.L45:
 112:oled/oled.c   ****   {
 113:oled/oled.c   ****     x = 0;
 114:oled/oled.c   ****     y = y + 2; //16像素的字体需要两页
 115:oled/oled.c   ****   }
 116:oled/oled.c   ****   if (Char_Size == 16)
 654              		.loc 1 116 3 is_stmt 1 view .LVU134
 655              		.loc 1 116 6 is_stmt 0 view .LVU135
 656 0010 102B     		cmp	r3, #16
 657 0012 09D0     		beq	.L56
 117:oled/oled.c   ****   {
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 15


 118:oled/oled.c   ****     OLED_Set_Pos(x, y);
 119:oled/oled.c   ****     for (i = 0; i < 8; i++)
 120:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i]);
 121:oled/oled.c   ****     OLED_Set_Pos(x, y + 1);
 122:oled/oled.c   ****     for (i = 0; i < 8; i++)
 123:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i + 8]);
 124:oled/oled.c   ****   }
 125:oled/oled.c   ****   else
 126:oled/oled.c   ****   {
 127:oled/oled.c   ****     OLED_Set_Pos(x, y);
 658              		.loc 1 127 5 is_stmt 1 view .LVU136
 659 0014 3146     		mov	r1, r6
 660 0016 3846     		mov	r0, r7
 661 0018 FFF7FEFF 		bl	OLED_Set_Pos
 662              	.LVL68:
 128:oled/oled.c   ****     for (i = 0; i < 6; i++)
 663              		.loc 1 128 5 view .LVU137
 664              		.loc 1 128 12 is_stmt 0 view .LVU138
 665 001c 0024     		movs	r4, #0
 666              		.loc 1 128 5 view .LVU139
 667 001e 30E0     		b	.L52
 668              	.LVL69:
 669              	.L55:
 113:oled/oled.c   ****     y = y + 2; //16像素的字体需要两页
 670              		.loc 1 113 5 is_stmt 1 view .LVU140
 114:oled/oled.c   ****   }
 671              		.loc 1 114 5 view .LVU141
 114:oled/oled.c   ****   }
 672              		.loc 1 114 7 is_stmt 0 view .LVU142
 673 0020 0236     		adds	r6, r6, #2
 674 0022 F6B2     		uxtb	r6, r6
 675              	.LVL70:
 113:oled/oled.c   ****     y = y + 2; //16像素的字体需要两页
 676              		.loc 1 113 7 view .LVU143
 677 0024 0027     		movs	r7, #0
 678 0026 F3E7     		b	.L45
 679              	.LVL71:
 680              	.L56:
 118:oled/oled.c   ****     for (i = 0; i < 8; i++)
 681              		.loc 1 118 5 is_stmt 1 view .LVU144
 682 0028 3146     		mov	r1, r6
 683 002a 3846     		mov	r0, r7
 684 002c FFF7FEFF 		bl	OLED_Set_Pos
 685              	.LVL72:
 119:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i]);
 686              		.loc 1 119 5 view .LVU145
 119:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i]);
 687              		.loc 1 119 12 is_stmt 0 view .LVU146
 688 0030 0024     		movs	r4, #0
 119:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i]);
 689              		.loc 1 119 5 view .LVU147
 690 0032 07E0     		b	.L47
 691              	.LVL73:
 692              	.L48:
 120:oled/oled.c   ****     OLED_Set_Pos(x, y + 1);
 693              		.loc 1 120 7 is_stmt 1 discriminator 3 view .LVU148
 120:oled/oled.c   ****     OLED_Set_Pos(x, y + 1);
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 16


 694              		.loc 1 120 33 is_stmt 0 discriminator 3 view .LVU149
 695 0034 04EB0513 		add	r3, r4, r5, lsl #4
 120:oled/oled.c   ****     OLED_Set_Pos(x, y + 1);
 696              		.loc 1 120 7 discriminator 3 view .LVU150
 697 0038 134A     		ldr	r2, .L57
 698 003a D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 699 003c FFF7FEFF 		bl	OLED_WR_DATA
 700              	.LVL74:
 119:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i]);
 701              		.loc 1 119 24 is_stmt 1 discriminator 3 view .LVU151
 119:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i]);
 702              		.loc 1 119 25 is_stmt 0 discriminator 3 view .LVU152
 703 0040 0134     		adds	r4, r4, #1
 704              	.LVL75:
 119:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i]);
 705              		.loc 1 119 25 discriminator 3 view .LVU153
 706 0042 E4B2     		uxtb	r4, r4
 707              	.LVL76:
 708              	.L47:
 119:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i]);
 709              		.loc 1 119 17 is_stmt 1 discriminator 1 view .LVU154
 119:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i]);
 710              		.loc 1 119 5 is_stmt 0 discriminator 1 view .LVU155
 711 0044 072C     		cmp	r4, #7
 712 0046 F5D9     		bls	.L48
 121:oled/oled.c   ****     for (i = 0; i < 8; i++)
 713              		.loc 1 121 5 is_stmt 1 view .LVU156
 714 0048 711C     		adds	r1, r6, #1
 715 004a C9B2     		uxtb	r1, r1
 716 004c 3846     		mov	r0, r7
 717 004e FFF7FEFF 		bl	OLED_Set_Pos
 718              	.LVL77:
 122:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i + 8]);
 719              		.loc 1 122 5 view .LVU157
 122:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i + 8]);
 720              		.loc 1 122 12 is_stmt 0 view .LVU158
 721 0052 0024     		movs	r4, #0
 122:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i + 8]);
 722              		.loc 1 122 5 view .LVU159
 723 0054 08E0     		b	.L49
 724              	.LVL78:
 725              	.L50:
 123:oled/oled.c   ****   }
 726              		.loc 1 123 7 is_stmt 1 discriminator 3 view .LVU160
 123:oled/oled.c   ****   }
 727              		.loc 1 123 33 is_stmt 0 discriminator 3 view .LVU161
 728 0056 04EB0513 		add	r3, r4, r5, lsl #4
 123:oled/oled.c   ****   }
 729              		.loc 1 123 37 discriminator 3 view .LVU162
 730 005a 0833     		adds	r3, r3, #8
 123:oled/oled.c   ****   }
 731              		.loc 1 123 7 discriminator 3 view .LVU163
 732 005c 0A4A     		ldr	r2, .L57
 733 005e D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 734 0060 FFF7FEFF 		bl	OLED_WR_DATA
 735              	.LVL79:
 122:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i + 8]);
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 17


 736              		.loc 1 122 24 is_stmt 1 discriminator 3 view .LVU164
 122:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i + 8]);
 737              		.loc 1 122 25 is_stmt 0 discriminator 3 view .LVU165
 738 0064 0134     		adds	r4, r4, #1
 739              	.LVL80:
 122:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i + 8]);
 740              		.loc 1 122 25 discriminator 3 view .LVU166
 741 0066 E4B2     		uxtb	r4, r4
 742              	.LVL81:
 743              	.L49:
 122:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i + 8]);
 744              		.loc 1 122 17 is_stmt 1 discriminator 1 view .LVU167
 122:oled/oled.c   ****       OLED_WR_DATA(F8x16[c * 16 + i + 8]);
 745              		.loc 1 122 5 is_stmt 0 discriminator 1 view .LVU168
 746 0068 072C     		cmp	r4, #7
 747 006a F4D9     		bls	.L50
 748 006c 0BE0     		b	.L44
 749              	.L53:
 129:oled/oled.c   ****       OLED_WR_DATA(F6x8[c][i]);
 750              		.loc 1 129 7 is_stmt 1 discriminator 3 view .LVU169
 751 006e 05EB4503 		add	r3, r5, r5, lsl #1
 752 0072 064A     		ldr	r2, .L57+4
 753 0074 02EB4303 		add	r3, r2, r3, lsl #1
 754 0078 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 755 007a FFF7FEFF 		bl	OLED_WR_DATA
 756              	.LVL82:
 128:oled/oled.c   ****       OLED_WR_DATA(F6x8[c][i]);
 757              		.loc 1 128 24 discriminator 3 view .LVU170
 128:oled/oled.c   ****       OLED_WR_DATA(F6x8[c][i]);
 758              		.loc 1 128 25 is_stmt 0 discriminator 3 view .LVU171
 759 007e 0134     		adds	r4, r4, #1
 760              	.LVL83:
 128:oled/oled.c   ****       OLED_WR_DATA(F6x8[c][i]);
 761              		.loc 1 128 25 discriminator 3 view .LVU172
 762 0080 E4B2     		uxtb	r4, r4
 763              	.LVL84:
 764              	.L52:
 128:oled/oled.c   ****       OLED_WR_DATA(F6x8[c][i]);
 765              		.loc 1 128 17 is_stmt 1 discriminator 1 view .LVU173
 128:oled/oled.c   ****       OLED_WR_DATA(F6x8[c][i]);
 766              		.loc 1 128 5 is_stmt 0 discriminator 1 view .LVU174
 767 0082 052C     		cmp	r4, #5
 768 0084 F3D9     		bls	.L53
 769              	.L44:
 130:oled/oled.c   ****   }
 131:oled/oled.c   **** }
 770              		.loc 1 131 1 view .LVU175
 771 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 772              	.LVL85:
 773              	.L58:
 774              		.loc 1 131 1 view .LVU176
 775              		.align	2
 776              	.L57:
 777 0088 00000000 		.word	.LANCHOR1
 778 008c 00000000 		.word	.LANCHOR2
 779              		.cfi_endproc
 780              	.LFE76:
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 18


 782              		.section	.text.OLED_ShowNum,"ax",%progbits
 783              		.align	1
 784              		.global	OLED_ShowNum
 785              		.syntax unified
 786              		.thumb
 787              		.thumb_func
 789              	OLED_ShowNum:
 790              	.LVL86:
 791              	.LFB77:
 132:oled/oled.c   **** // 显示2个数字
 133:oled/oled.c   **** // x,y :起点坐标
 134:oled/oled.c   **** // len :数字的位数
 135:oled/oled.c   **** // size:字体大小
 136:oled/oled.c   **** // mode:模式	0,填充模式;1,叠加模式
 137:oled/oled.c   **** // num:数值(0~4294967295);
 138:oled/oled.c   **** void OLED_ShowNum(uint8_t x, uint8_t y, unsigned int num, uint8_t len, uint8_t size2)
 139:oled/oled.c   **** {
 792              		.loc 1 139 1 is_stmt 1 view -0
 793              		.cfi_startproc
 794              		@ args = 4, pretend = 0, frame = 0
 795              		@ frame_needed = 0, uses_anonymous_args = 0
 796              		.loc 1 139 1 is_stmt 0 view .LVU178
 797 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 798              	.LCFI17:
 799              		.cfi_def_cfa_offset 32
 800              		.cfi_offset 4, -32
 801              		.cfi_offset 5, -28
 802              		.cfi_offset 6, -24
 803              		.cfi_offset 7, -20
 804              		.cfi_offset 8, -16
 805              		.cfi_offset 9, -12
 806              		.cfi_offset 10, -8
 807              		.cfi_offset 14, -4
 808 0004 8246     		mov	r10, r0
 809 0006 8946     		mov	r9, r1
 810 0008 9046     		mov	r8, r2
 811 000a 1D46     		mov	r5, r3
 812 000c 9DF82060 		ldrb	r6, [sp, #32]	@ zero_extendqisi2
 140:oled/oled.c   ****   uint8_t t, temp;
 813              		.loc 1 140 3 is_stmt 1 view .LVU179
 141:oled/oled.c   ****   uint8_t enshow = 0;
 814              		.loc 1 141 3 view .LVU180
 815              	.LVL87:
 142:oled/oled.c   ****   for (t = 0; t < len; t++)
 816              		.loc 1 142 3 view .LVU181
 141:oled/oled.c   ****   uint8_t enshow = 0;
 817              		.loc 1 141 11 is_stmt 0 view .LVU182
 818 0010 0027     		movs	r7, #0
 819              		.loc 1 142 10 view .LVU183
 820 0012 3C46     		mov	r4, r7
 821              		.loc 1 142 3 view .LVU184
 822 0014 19E0     		b	.L60
 823              	.LVL88:
 824              	.L67:
 143:oled/oled.c   ****   {
 144:oled/oled.c   ****     temp = (num / oled_pow(10, len - t - 1)) % 10;
 145:oled/oled.c   ****     if (enshow == 0 && t < (len - 1))
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 19


 146:oled/oled.c   ****     {
 147:oled/oled.c   ****       if (temp == 0)
 148:oled/oled.c   ****       {
 149:oled/oled.c   ****         OLED_ShowChar(x + (size2 / 2) * t, y, ' ', size2);
 825              		.loc 1 149 9 is_stmt 1 view .LVU185
 826              		.loc 1 149 39 is_stmt 0 view .LVU186
 827 0016 7008     		lsrs	r0, r6, #1
 828 0018 04FB00F0 		mul	r0, r4, r0
 829 001c C0B2     		uxtb	r0, r0
 830              		.loc 1 149 9 view .LVU187
 831 001e 5044     		add	r0, r0, r10
 832 0020 3346     		mov	r3, r6
 833 0022 2022     		movs	r2, #32
 834              	.LVL89:
 835              		.loc 1 149 9 view .LVU188
 836 0024 4946     		mov	r1, r9
 837 0026 C0B2     		uxtb	r0, r0
 838 0028 FFF7FEFF 		bl	OLED_ShowChar
 839              	.LVL90:
 150:oled/oled.c   ****         continue;
 840              		.loc 1 150 9 is_stmt 1 view .LVU189
 841 002c 0BE0     		b	.L62
 842              	.LVL91:
 843              	.L61:
 151:oled/oled.c   ****       }
 152:oled/oled.c   ****       else
 153:oled/oled.c   ****         enshow = 1;
 154:oled/oled.c   ****     }
 155:oled/oled.c   ****     OLED_ShowChar(x + (size2 / 2) * t, y, temp + '0', size2);
 844              		.loc 1 155 5 view .LVU190
 845              		.loc 1 155 35 is_stmt 0 view .LVU191
 846 002e 7008     		lsrs	r0, r6, #1
 847 0030 04FB00F0 		mul	r0, r4, r0
 848 0034 C0B2     		uxtb	r0, r0
 849              		.loc 1 155 5 view .LVU192
 850 0036 3032     		adds	r2, r2, #48
 851              	.LVL92:
 852              		.loc 1 155 5 view .LVU193
 853 0038 5044     		add	r0, r0, r10
 854 003a 3346     		mov	r3, r6
 855 003c D2B2     		uxtb	r2, r2
 856              	.LVL93:
 857              		.loc 1 155 5 view .LVU194
 858 003e 4946     		mov	r1, r9
 859 0040 C0B2     		uxtb	r0, r0
 860 0042 FFF7FEFF 		bl	OLED_ShowChar
 861              	.LVL94:
 862              	.L62:
 142:oled/oled.c   ****   {
 863              		.loc 1 142 24 is_stmt 1 discriminator 2 view .LVU195
 142:oled/oled.c   ****   {
 864              		.loc 1 142 25 is_stmt 0 discriminator 2 view .LVU196
 865 0046 0134     		adds	r4, r4, #1
 866              	.LVL95:
 142:oled/oled.c   ****   {
 867              		.loc 1 142 25 discriminator 2 view .LVU197
 868 0048 E4B2     		uxtb	r4, r4
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 20


 869              	.LVL96:
 870              	.L60:
 142:oled/oled.c   ****   {
 871              		.loc 1 142 15 is_stmt 1 discriminator 1 view .LVU198
 142:oled/oled.c   ****   {
 872              		.loc 1 142 3 is_stmt 0 discriminator 1 view .LVU199
 873 004a AC42     		cmp	r4, r5
 874 004c 1CD2     		bcs	.L66
 144:oled/oled.c   ****     if (enshow == 0 && t < (len - 1))
 875              		.loc 1 144 5 is_stmt 1 view .LVU200
 144:oled/oled.c   ****     if (enshow == 0 && t < (len - 1))
 876              		.loc 1 144 36 is_stmt 0 view .LVU201
 877 004e 291B     		subs	r1, r5, r4
 878 0050 C9B2     		uxtb	r1, r1
 144:oled/oled.c   ****     if (enshow == 0 && t < (len - 1))
 879              		.loc 1 144 19 view .LVU202
 880 0052 0139     		subs	r1, r1, #1
 881 0054 C9B2     		uxtb	r1, r1
 882 0056 0A20     		movs	r0, #10
 883 0058 FFF7FEFF 		bl	oled_pow
 884              	.LVL97:
 144:oled/oled.c   ****     if (enshow == 0 && t < (len - 1))
 885              		.loc 1 144 17 view .LVU203
 886 005c B8FBF0F0 		udiv	r0, r8, r0
 144:oled/oled.c   ****     if (enshow == 0 && t < (len - 1))
 887              		.loc 1 144 46 view .LVU204
 888 0060 0A4A     		ldr	r2, .L68
 889 0062 A2FB003C 		umull	r3, ip, r2, r0
 890 0066 4FEADC0C 		lsr	ip, ip, #3
 891 006a 0CEB8C0C 		add	ip, ip, ip, lsl #2
 892 006e A0EB4C0C 		sub	ip, r0, ip, lsl #1
 144:oled/oled.c   ****     if (enshow == 0 && t < (len - 1))
 893              		.loc 1 144 10 view .LVU205
 894 0072 5FFA8CF2 		uxtb	r2, ip
 895              	.LVL98:
 145:oled/oled.c   ****     {
 896              		.loc 1 145 5 is_stmt 1 view .LVU206
 145:oled/oled.c   ****     {
 897              		.loc 1 145 8 is_stmt 0 view .LVU207
 898 0076 002F     		cmp	r7, #0
 899 0078 D9D1     		bne	.L61
 145:oled/oled.c   ****     {
 900              		.loc 1 145 33 discriminator 1 view .LVU208
 901 007a 6B1E     		subs	r3, r5, #1
 145:oled/oled.c   ****     {
 902              		.loc 1 145 21 discriminator 1 view .LVU209
 903 007c 9C42     		cmp	r4, r3
 904 007e D6DA     		bge	.L61
 147:oled/oled.c   ****       {
 905              		.loc 1 147 7 is_stmt 1 view .LVU210
 147:oled/oled.c   ****       {
 906              		.loc 1 147 10 is_stmt 0 view .LVU211
 907 0080 002A     		cmp	r2, #0
 908 0082 C8D0     		beq	.L67
 153:oled/oled.c   ****     }
 909              		.loc 1 153 16 view .LVU212
 910 0084 0127     		movs	r7, #1
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 21


 911              	.LVL99:
 153:oled/oled.c   ****     }
 912              		.loc 1 153 16 view .LVU213
 913 0086 D2E7     		b	.L61
 914              	.LVL100:
 915              	.L66:
 156:oled/oled.c   ****   }
 157:oled/oled.c   **** }
 916              		.loc 1 157 1 view .LVU214
 917 0088 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 918              	.LVL101:
 919              	.L69:
 920              		.loc 1 157 1 view .LVU215
 921              		.align	2
 922              	.L68:
 923 008c CDCCCCCC 		.word	-858993459
 924              		.cfi_endproc
 925              	.LFE77:
 927              		.section	.text.OLED_ShowString,"ax",%progbits
 928              		.align	1
 929              		.global	OLED_ShowString
 930              		.syntax unified
 931              		.thumb
 932              		.thumb_func
 934              	OLED_ShowString:
 935              	.LVL102:
 936              	.LFB78:
 158:oled/oled.c   **** // 显示一个字符号串
 159:oled/oled.c   **** void OLED_ShowString(uint8_t x, uint8_t y, uint8_t *chr, uint8_t Char_Size)
 160:oled/oled.c   **** {
 937              		.loc 1 160 1 is_stmt 1 view -0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              		.loc 1 160 1 is_stmt 0 view .LVU217
 942 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 943              	.LCFI18:
 944              		.cfi_def_cfa_offset 24
 945              		.cfi_offset 4, -24
 946              		.cfi_offset 5, -20
 947              		.cfi_offset 6, -16
 948              		.cfi_offset 7, -12
 949              		.cfi_offset 8, -8
 950              		.cfi_offset 14, -4
 951 0004 0446     		mov	r4, r0
 952 0006 0E46     		mov	r6, r1
 953 0008 1746     		mov	r7, r2
 954 000a 9846     		mov	r8, r3
 161:oled/oled.c   ****   unsigned char j = 0;
 955              		.loc 1 161 3 is_stmt 1 view .LVU218
 956              	.LVL103:
 162:oled/oled.c   ****   while (chr[j] != '\0')
 957              		.loc 1 162 3 view .LVU219
 161:oled/oled.c   ****   unsigned char j = 0;
 958              		.loc 1 161 17 is_stmt 0 view .LVU220
 959 000c 0025     		movs	r5, #0
 960              		.loc 1 162 9 view .LVU221
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 22


 961 000e 01E0     		b	.L71
 962              	.LVL104:
 963              	.L72:
 163:oled/oled.c   ****   {
 164:oled/oled.c   ****     OLED_ShowChar(x, y, chr[j], Char_Size);
 165:oled/oled.c   ****     x += 8;
 166:oled/oled.c   ****     if (x > 120)
 167:oled/oled.c   ****     {
 168:oled/oled.c   ****       x = 0;
 169:oled/oled.c   ****       y += 2;
 170:oled/oled.c   ****     }
 171:oled/oled.c   ****     j++;
 964              		.loc 1 171 5 is_stmt 1 view .LVU222
 965              		.loc 1 171 6 is_stmt 0 view .LVU223
 966 0010 0135     		adds	r5, r5, #1
 967              	.LVL105:
 968              		.loc 1 171 6 view .LVU224
 969 0012 EDB2     		uxtb	r5, r5
 970              	.LVL106:
 971              	.L71:
 162:oled/oled.c   ****   while (chr[j] != '\0')
 972              		.loc 1 162 9 is_stmt 1 view .LVU225
 162:oled/oled.c   ****   while (chr[j] != '\0')
 973              		.loc 1 162 13 is_stmt 0 view .LVU226
 974 0014 7A5D     		ldrb	r2, [r7, r5]	@ zero_extendqisi2
 162:oled/oled.c   ****   while (chr[j] != '\0')
 975              		.loc 1 162 9 view .LVU227
 976 0016 62B1     		cbz	r2, .L75
 164:oled/oled.c   ****     x += 8;
 977              		.loc 1 164 5 is_stmt 1 view .LVU228
 978 0018 4346     		mov	r3, r8
 979 001a 3146     		mov	r1, r6
 980 001c 2046     		mov	r0, r4
 981 001e FFF7FEFF 		bl	OLED_ShowChar
 982              	.LVL107:
 165:oled/oled.c   ****     if (x > 120)
 983              		.loc 1 165 5 view .LVU229
 165:oled/oled.c   ****     if (x > 120)
 984              		.loc 1 165 7 is_stmt 0 view .LVU230
 985 0022 0834     		adds	r4, r4, #8
 986              	.LVL108:
 165:oled/oled.c   ****     if (x > 120)
 987              		.loc 1 165 7 view .LVU231
 988 0024 E4B2     		uxtb	r4, r4
 989              	.LVL109:
 166:oled/oled.c   ****     {
 990              		.loc 1 166 5 is_stmt 1 view .LVU232
 166:oled/oled.c   ****     {
 991              		.loc 1 166 8 is_stmt 0 view .LVU233
 992 0026 782C     		cmp	r4, #120
 993 0028 F2D9     		bls	.L72
 168:oled/oled.c   ****       y += 2;
 994              		.loc 1 168 7 is_stmt 1 view .LVU234
 995              	.LVL110:
 169:oled/oled.c   ****     }
 996              		.loc 1 169 7 view .LVU235
 169:oled/oled.c   ****     }
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 23


 997              		.loc 1 169 9 is_stmt 0 view .LVU236
 998 002a 0236     		adds	r6, r6, #2
 999              	.LVL111:
 169:oled/oled.c   ****     }
 1000              		.loc 1 169 9 view .LVU237
 1001 002c F6B2     		uxtb	r6, r6
 1002              	.LVL112:
 168:oled/oled.c   ****       y += 2;
 1003              		.loc 1 168 9 view .LVU238
 1004 002e 0024     		movs	r4, #0
 1005 0030 EEE7     		b	.L72
 1006              	.LVL113:
 1007              	.L75:
 172:oled/oled.c   ****   }
 173:oled/oled.c   **** }
 1008              		.loc 1 173 1 view .LVU239
 1009 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1010              		.loc 1 173 1 view .LVU240
 1011              		.cfi_endproc
 1012              	.LFE78:
 1014              		.section	.text.OLED_ShowCHinese,"ax",%progbits
 1015              		.align	1
 1016              		.global	OLED_ShowCHinese
 1017              		.syntax unified
 1018              		.thumb
 1019              		.thumb_func
 1021              	OLED_ShowCHinese:
 1022              	.LVL114:
 1023              	.LFB79:
 174:oled/oled.c   **** // 显示汉字
 175:oled/oled.c   **** // hzk 用取模软件得出的数组
 176:oled/oled.c   **** void OLED_ShowCHinese(uint8_t x, uint8_t y, uint8_t no)
 177:oled/oled.c   **** {
 1024              		.loc 1 177 1 is_stmt 1 view -0
 1025              		.cfi_startproc
 1026              		@ args = 0, pretend = 0, frame = 0
 1027              		@ frame_needed = 0, uses_anonymous_args = 0
 1028              		.loc 1 177 1 is_stmt 0 view .LVU242
 1029 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1030              	.LCFI19:
 1031              		.cfi_def_cfa_offset 24
 1032              		.cfi_offset 3, -24
 1033              		.cfi_offset 4, -20
 1034              		.cfi_offset 5, -16
 1035              		.cfi_offset 6, -12
 1036              		.cfi_offset 7, -8
 1037              		.cfi_offset 14, -4
 1038 0002 0746     		mov	r7, r0
 1039 0004 0E46     		mov	r6, r1
 1040 0006 1546     		mov	r5, r2
 178:oled/oled.c   ****   uint8_t t, adder = 0;
 1041              		.loc 1 178 3 is_stmt 1 view .LVU243
 1042              	.LVL115:
 179:oled/oled.c   ****   OLED_Set_Pos(x, y);
 1043              		.loc 1 179 3 view .LVU244
 1044 0008 FFF7FEFF 		bl	OLED_Set_Pos
 1045              	.LVL116:
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 24


 180:oled/oled.c   ****   for (t = 0; t < 16; t++)
 1046              		.loc 1 180 3 view .LVU245
 1047              		.loc 1 180 10 is_stmt 0 view .LVU246
 1048 000c 0024     		movs	r4, #0
 1049              		.loc 1 180 3 view .LVU247
 1050 000e 07E0     		b	.L77
 1051              	.LVL117:
 1052              	.L78:
 181:oled/oled.c   ****   {
 182:oled/oled.c   ****     OLED_WR_DATA(Hzk[2 * no][t]);
 1053              		.loc 1 182 5 is_stmt 1 discriminator 3 view .LVU248
 1054 0010 0E4B     		ldr	r3, .L82
 1055 0012 03EB4513 		add	r3, r3, r5, lsl #5
 1056 0016 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1057 0018 FFF7FEFF 		bl	OLED_WR_DATA
 1058              	.LVL118:
 180:oled/oled.c   ****   for (t = 0; t < 16; t++)
 1059              		.loc 1 180 23 discriminator 3 view .LVU249
 180:oled/oled.c   ****   for (t = 0; t < 16; t++)
 1060              		.loc 1 180 24 is_stmt 0 discriminator 3 view .LVU250
 1061 001c 0134     		adds	r4, r4, #1
 1062              	.LVL119:
 180:oled/oled.c   ****   for (t = 0; t < 16; t++)
 1063              		.loc 1 180 24 discriminator 3 view .LVU251
 1064 001e E4B2     		uxtb	r4, r4
 1065              	.LVL120:
 1066              	.L77:
 180:oled/oled.c   ****   for (t = 0; t < 16; t++)
 1067              		.loc 1 180 15 is_stmt 1 discriminator 1 view .LVU252
 180:oled/oled.c   ****   for (t = 0; t < 16; t++)
 1068              		.loc 1 180 3 is_stmt 0 discriminator 1 view .LVU253
 1069 0020 0F2C     		cmp	r4, #15
 1070 0022 F5D9     		bls	.L78
 183:oled/oled.c   ****     // adder += 1;
 184:oled/oled.c   ****   }
 185:oled/oled.c   ****   OLED_Set_Pos(x, y + 1);
 1071              		.loc 1 185 3 is_stmt 1 view .LVU254
 1072 0024 711C     		adds	r1, r6, #1
 1073 0026 C9B2     		uxtb	r1, r1
 1074 0028 3846     		mov	r0, r7
 1075 002a FFF7FEFF 		bl	OLED_Set_Pos
 1076              	.LVL121:
 186:oled/oled.c   ****   for (t = 0; t < 16; t++)
 1077              		.loc 1 186 3 view .LVU255
 1078              		.loc 1 186 10 is_stmt 0 view .LVU256
 1079 002e 0024     		movs	r4, #0
 1080              		.loc 1 186 3 view .LVU257
 1081 0030 09E0     		b	.L79
 1082              	.LVL122:
 1083              	.L80:
 187:oled/oled.c   ****   {
 188:oled/oled.c   ****     OLED_WR_DATA(Hzk[2 * no + 1][t]);
 1084              		.loc 1 188 5 is_stmt 1 discriminator 3 view .LVU258
 1085              		.loc 1 188 24 is_stmt 0 discriminator 3 view .LVU259
 1086 0032 6B00     		lsls	r3, r5, #1
 1087              		.loc 1 188 29 discriminator 3 view .LVU260
 1088 0034 591C     		adds	r1, r3, #1
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 25


 1089              		.loc 1 188 5 discriminator 3 view .LVU261
 1090 0036 054B     		ldr	r3, .L82
 1091 0038 03EB0113 		add	r3, r3, r1, lsl #4
 1092 003c 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 1093 003e FFF7FEFF 		bl	OLED_WR_DATA
 1094              	.LVL123:
 186:oled/oled.c   ****   for (t = 0; t < 16; t++)
 1095              		.loc 1 186 23 is_stmt 1 discriminator 3 view .LVU262
 186:oled/oled.c   ****   for (t = 0; t < 16; t++)
 1096              		.loc 1 186 24 is_stmt 0 discriminator 3 view .LVU263
 1097 0042 0134     		adds	r4, r4, #1
 1098              	.LVL124:
 186:oled/oled.c   ****   for (t = 0; t < 16; t++)
 1099              		.loc 1 186 24 discriminator 3 view .LVU264
 1100 0044 E4B2     		uxtb	r4, r4
 1101              	.LVL125:
 1102              	.L79:
 186:oled/oled.c   ****   for (t = 0; t < 16; t++)
 1103              		.loc 1 186 15 is_stmt 1 discriminator 1 view .LVU265
 186:oled/oled.c   ****   for (t = 0; t < 16; t++)
 1104              		.loc 1 186 3 is_stmt 0 discriminator 1 view .LVU266
 1105 0046 0F2C     		cmp	r4, #15
 1106 0048 F3D9     		bls	.L80
 189:oled/oled.c   ****     // adder += 1;
 190:oled/oled.c   ****   }
 191:oled/oled.c   **** }
 1107              		.loc 1 191 1 view .LVU267
 1108 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1109              	.LVL126:
 1110              	.L83:
 1111              		.loc 1 191 1 view .LVU268
 1112              		.align	2
 1113              	.L82:
 1114 004c 00000000 		.word	.LANCHOR3
 1115              		.cfi_endproc
 1116              	.LFE79:
 1118              		.global	CMD_Data
 1119              		.global	Hzk
 1120              		.global	F8x16
 1121              		.global	F6x8
 1122              		.section	.data.CMD_Data,"aw"
 1123              		.align	2
 1124              		.set	.LANCHOR0,. + 0
 1127              	CMD_Data:
 1128 0000 AE001040 		.ascii	"\256\000\020@\260\201\377\241\246\250?\310\323\000\325"
 1128      B081FFA1 
 1128      A6A83FC8 
 1128      D300D5
 1129 000f 80D805D9 		.ascii	"\200\330\005\331\361\332\022\3300\215\024\257"
 1129      F1DA12D8 
 1129      308D14AF 
 1130              		.section	.rodata.F6x8,"a"
 1131              		.align	2
 1132              		.set	.LANCHOR2,. + 0
 1135              	F6x8:
 1136 0000 00000000 		.ascii	"\000\000\000\000\000\000"
 1136      0000
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 26


 1137 0006 0000002F 		.ascii	"\000\000\000/\000\000"
 1137      0000
 1138 000c 00000700 		.ascii	"\000\000\007\000\007\000"
 1138      0700
 1139 0012 00147F14 		.ascii	"\000\024\177\024\177\024"
 1139      7F14
 1140 0018 00242A7F 		.ascii	"\000$*\177*\022"
 1140      2A12
 1141 001e 00626408 		.ascii	"\000bd\010\023#"
 1141      1323
 1142 0024 00364955 		.ascii	"\0006IU\"P"
 1142      2250
 1143 002a 00000503 		.ascii	"\000\000\005\003\000\000"
 1143      0000
 1144 0030 00001C22 		.ascii	"\000\000\034\"A\000"
 1144      4100
 1145 0036 00004122 		.ascii	"\000\000A\"\034\000"
 1145      1C00
 1146 003c 0014083E 		.ascii	"\000\024\010>\010\024"
 1146      0814
 1147 0042 0008083E 		.ascii	"\000\010\010>\010\010"
 1147      0808
 1148 0048 000000A0 		.ascii	"\000\000\000\240`\000"
 1148      6000
 1149 004e 00080808 		.ascii	"\000\010\010\010\010\010"
 1149      0808
 1150 0054 00006060 		.ascii	"\000\000``\000\000"
 1150      0000
 1151 005a 00201008 		.ascii	"\000 \020\010\004\002"
 1151      0402
 1152 0060 003E5149 		.ascii	"\000>QIE>"
 1152      453E
 1153 0066 0000427F 		.ascii	"\000\000B\177@\000"
 1153      4000
 1154 006c 00426151 		.ascii	"\000BaQIF"
 1154      4946
 1155 0072 00214145 		.ascii	"\000!AEK1"
 1155      4B31
 1156 0078 00181412 		.ascii	"\000\030\024\022\177\020"
 1156      7F10
 1157 007e 00274545 		.ascii	"\000'EEE9"
 1157      4539
 1158 0084 003C4A49 		.ascii	"\000<JII0"
 1158      4930
 1159 008a 00017109 		.ascii	"\000\001q\011\005\003"
 1159      0503
 1160 0090 00364949 		.ascii	"\0006III6"
 1160      4936
 1161 0096 00064949 		.ascii	"\000\006II)\036"
 1161      291E
 1162 009c 00003636 		.ascii	"\000\00066\000\000"
 1162      0000
 1163 00a2 00005636 		.ascii	"\000\000V6\000\000"
 1163      0000
 1164 00a8 00081422 		.ascii	"\000\010\024\"A\000"
 1164      4100
 1165 00ae 00141414 		.ascii	"\000\024\024\024\024\024"
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 27


 1165      1414
 1166 00b4 00004122 		.ascii	"\000\000A\"\024\010"
 1166      1408
 1167 00ba 00020151 		.ascii	"\000\002\001Q\011\006"
 1167      0906
 1168 00c0 00324959 		.ascii	"\0002IYQ>"
 1168      513E
 1169 00c6 007C1211 		.ascii	"\000|\022\021\022|"
 1169      127C
 1170 00cc 007F4949 		.ascii	"\000\177III6"
 1170      4936
 1171 00d2 003E4141 		.ascii	"\000>AAA\""
 1171      4122
 1172 00d8 007F4141 		.ascii	"\000\177AA\"\034"
 1172      221C
 1173 00de 007F4949 		.ascii	"\000\177IIIA"
 1173      4941
 1174 00e4 007F0909 		.ascii	"\000\177\011\011\011\001"
 1174      0901
 1175 00ea 003E4149 		.ascii	"\000>AIIz"
 1175      497A
 1176 00f0 007F0808 		.ascii	"\000\177\010\010\010\177"
 1176      087F
 1177 00f6 0000417F 		.ascii	"\000\000A\177A\000"
 1177      4100
 1178 00fc 00204041 		.ascii	"\000 @A?\001"
 1178      3F01
 1179 0102 007F0814 		.ascii	"\000\177\010\024\"A"
 1179      2241
 1180 0108 007F4040 		.ascii	"\000\177@@@@"
 1180      4040
 1181 010e 007F020C 		.ascii	"\000\177\002\014\002\177"
 1181      027F
 1182 0114 007F0408 		.ascii	"\000\177\004\010\020\177"
 1182      107F
 1183 011a 003E4141 		.ascii	"\000>AAA>"
 1183      413E
 1184 0120 007F0909 		.ascii	"\000\177\011\011\011\006"
 1184      0906
 1185 0126 003E4151 		.ascii	"\000>AQ!^"
 1185      215E
 1186 012c 007F0919 		.ascii	"\000\177\011\031)F"
 1186      2946
 1187 0132 00464949 		.ascii	"\000FIII1"
 1187      4931
 1188 0138 0001017F 		.ascii	"\000\001\001\177\001\001"
 1188      0101
 1189 013e 003F4040 		.ascii	"\000?@@@?"
 1189      403F
 1190 0144 001F2040 		.ascii	"\000\037 @ \037"
 1190      201F
 1191 014a 003F4038 		.ascii	"\000?@8@?"
 1191      403F
 1192 0150 00631408 		.ascii	"\000c\024\010\024c"
 1192      1463
 1193 0156 00070870 		.ascii	"\000\007\010p\010\007"
 1193      0807
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 28


 1194 015c 00615149 		.ascii	"\000aQIEC"
 1194      4543
 1195 0162 00007F41 		.ascii	"\000\000\177AA\000"
 1195      4100
 1196 0168 00552A55 		.ascii	"\000U*U*U"
 1196      2A55
 1197 016e 00004141 		.ascii	"\000\000AA\177\000"
 1197      7F00
 1198 0174 00040201 		.ascii	"\000\004\002\001\002\004"
 1198      0204
 1199 017a 00404040 		.ascii	"\000@@@@@"
 1199      4040
 1200 0180 00000102 		.ascii	"\000\000\001\002\004\000"
 1200      0400
 1201 0186 00205454 		.ascii	"\000 TTTx"
 1201      5478
 1202 018c 007F4844 		.ascii	"\000\177HDD8"
 1202      4438
 1203 0192 00384444 		.ascii	"\0008DDD "
 1203      4420
 1204 0198 00384444 		.ascii	"\0008DDH\177"
 1204      487F
 1205 019e 00385454 		.ascii	"\0008TTT\030"
 1205      5418
 1206 01a4 00087E09 		.ascii	"\000\010~\011\001\002"
 1206      0102
 1207 01aa 0018A4A4 		.ascii	"\000\030\244\244\244|"
 1207      A47C
 1208 01b0 007F0804 		.ascii	"\000\177\010\004\004x"
 1208      0478
 1209 01b6 0000447D 		.ascii	"\000\000D}@\000"
 1209      4000
 1210 01bc 00408084 		.ascii	"\000@\200\204}\000"
 1210      7D00
 1211 01c2 007F1028 		.ascii	"\000\177\020(D\000"
 1211      4400
 1212 01c8 0000417F 		.ascii	"\000\000A\177@\000"
 1212      4000
 1213 01ce 007C0418 		.ascii	"\000|\004\030\004x"
 1213      0478
 1214 01d4 007C0804 		.ascii	"\000|\010\004\004x"
 1214      0478
 1215 01da 00384444 		.ascii	"\0008DDD8"
 1215      4438
 1216 01e0 00FC2424 		.ascii	"\000\374$$$\030"
 1216      2418
 1217 01e6 00182424 		.ascii	"\000\030$$\030\374"
 1217      18FC
 1218 01ec 007C0804 		.ascii	"\000|\010\004\004\010"
 1218      0408
 1219 01f2 00485454 		.ascii	"\000HTTT "
 1219      5420
 1220 01f8 00043F44 		.ascii	"\000\004?D@ "
 1220      4020
 1221 01fe 003C4040 		.ascii	"\000<@@ |"
 1221      207C
 1222 0204 001C2040 		.ascii	"\000\034 @ \034"
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 29


 1222      201C
 1223 020a 003C4030 		.ascii	"\000<@0@<"
 1223      403C
 1224 0210 00442810 		.ascii	"\000D(\020(D"
 1224      2844
 1225 0216 001CA0A0 		.ascii	"\000\034\240\240\240|"
 1225      A07C
 1226 021c 00446454 		.ascii	"\000DdTLD"
 1226      4C44
 1227 0222 14141414 		.ascii	"\024\024\024\024\024\024"
 1227      1414
 1228              		.section	.rodata.F8x16,"a"
 1229              		.align	2
 1230              		.set	.LANCHOR1,. + 0
 1233              	F8x16:
 1234 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 1234      00000000 
 1234      00000000 
 1234      00
 1235 000d 00000000 		.ascii	"\000\000\000\000\000\000\370\000\000\000\000\000\000"
 1235      0000F800 
 1235      00000000 
 1235      00
 1236 001a 00333000 		.ascii	"\00030\000\000\000\000\020\014\006\020\014\006\000\000"
 1236      00000010 
 1236      0C06100C 
 1236      060000
 1237 0029 00000000 		.ascii	"\000\000\000\000\000\000\000@\300x@\300x@\000\004?\004"
 1237      00000040 
 1237      C07840C0 
 1237      78400004 
 1237      3F04
 1238 003b 043F0404 		.ascii	"\004?\004\004\000\000p\210\374\0100\000\000\000\030"
 1238      00007088 
 1238      FC083000 
 1238      000018
 1239 004a 20FF211E 		.ascii	" \377!\036\000\000\360\010\360\000\340\030\000\000\000"
 1239      0000F008 
 1239      F000E018 
 1239      000000
 1240 0059 211C031E 		.ascii	"!\034\003\036!\036\000\000\360\010\210p\000\000\000"
 1240      211E0000 
 1240      F0088870 
 1240      000000
 1241 0068 1E212324 		.ascii	"\036!#$\031'!\020\020\026\016\000\000\000\000\000\000"
 1241      19272110 
 1241      10160E00 
 1241      00000000 
 1241      00
 1242 0079 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\340\030\004"
 1242      00000000 
 1242      0000E018 
 1242      04
 1243 0086 02000000 		.ascii	"\002\000\000\000\000\007\030 @\000\000\002\004\030\340"
 1243      00071820 
 1243      40000002 
 1243      0418E0
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 30


 1244 0095 00000000 		.ascii	"\000\000\000\000@ \030\007\000\000\000@@\200\360\200"
 1244      40201807 
 1244      00000040 
 1244      4080F080 
 1245 00a5 40400002 		.ascii	"@@\000\002\002\001\017\001\002\002\000\000\000\000\360"
 1245      02010F01 
 1245      02020000 
 1245      0000F0
 1246 00b4 00000000 		.ascii	"\000\000\000\000\001\001\001\037\001\001\001\000\000"
 1246      0101011F 
 1246      01010100 
 1246      00
 1247 00c1 00000000 		.ascii	"\000\000\000\000\000\000\000\200\260p\000\000\000\000"
 1247      00000080 
 1247      B0700000 
 1247      0000
 1248 00cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\001\001\001"
 1248      00000000 
 1248      00000101 
 1248      01
 1249 00dc 01010101 		.ascii	"\001\001\001\001\000\000\000\000\000\000\000\000\000"
 1249      00000000 
 1249      00000000 
 1249      00
 1250 00e9 30300000 		.ascii	"00\000\000\000\000\000\000\000\000\000\200`\030\004"
 1250      00000000 
 1250      00000080 
 1250      601804
 1251 00f8 00601806 		.ascii	"\000`\030\006\001\000\000\000\000\340\020\010\010\020"
 1251      01000000 
 1251      00E01008 
 1251      0810
 1252 0106 E000000F 		.ascii	"\340\000\000\017\020  \020\017\000\000\020\020\370\000"
 1252      10202010 
 1252      0F000010 
 1252      10F800
 1253 0115 00000000 		.ascii	"\000\000\000\000  ?  \000\000\000p\010\010\010\210p"
 1253      20203F20 
 1253      20000000 
 1253      70080808 
 1253      8870
 1254 0127 00003028 		.ascii	"\000\0000($\"!0\000\0000\010\210\210H0\000\000\030 "
 1254      24222130 
 1254      00003008 
 1254      88884830 
 1254      00001820 
 1255 013b 2020110E 		.ascii	"  \021\016\000\000\000\300 \020\370\000\000\000\007"
 1255      000000C0 
 1255      2010F800 
 1255      000007
 1256 014a 0424243F 		.ascii	"\004$$?$\000\000\370\010\210\210\010\010\000\000\031"
 1256      240000F8 
 1256      08888808 
 1256      08000019 
 1257 015a 21202011 		.ascii	"!  \021\016\000\000\340\020\210\210\030\000\000\000"
 1257      0E0000E0 
 1257      10888818 
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 31


 1257      000000
 1258 0169 0F112020 		.ascii	"\017\021  \021\016\000\0008\010\010\3108\010\000\000"
 1258      110E0000 
 1258      380808C8 
 1258      38080000 
 1259 0179 00003F00 		.ascii	"\000\000?\000\000\000\000\000p\210\010\010\210p\000"
 1259      00000000 
 1259      70880808 
 1259      887000
 1260 0188 001C2221 		.ascii	"\000\034\"!!\"\034\000\000\340\020\010\010\020\340\000"
 1260      21221C00 
 1260      00E01008 
 1260      0810E000 
 1261 0198 00003122 		.ascii	"\000\0001\"\"\021\017\000\000\000\000\300\300\000\000"
 1261      22110F00 
 1261      000000C0 
 1261      C00000
 1262 01a7 00000000 		.ascii	"\000\000\000\00000\000\000\000\000\000\000\200\000\000"
 1262      30300000 
 1262      00000000 
 1262      800000
 1263 01b6 00000000 		.ascii	"\000\000\000\000\200`\000\000\000\000\000\000\200@ "
 1263      80600000 
 1263      00000000 
 1263      804020
 1264 01c5 10080000 		.ascii	"\020\010\000\000\001\002\004\010\020 \000@@@@@@@\000"
 1264      01020408 
 1264      10200040 
 1264      40404040 
 1264      404000
 1265 01d8 04040404 		.ascii	"\004\004\004\004\004\004\004\000\000\010\020 @\200\000"
 1265      04040400 
 1265      00081020 
 1265      408000
 1266 01e7 00002010 		.ascii	"\000\000 \020\010\004\002\001\000\000pH\010\010\010"
 1266      08040201 
 1266      00007048 
 1266      080808
 1267 01f6 F0000000 		.ascii	"\360\000\000\000\00006\001\000\000\3000\310(\350\020"
 1267      00303601 
 1267      0000C030 
 1267      C828E810 
 1268 0206 E0000718 		.ascii	"\340\000\007\030'$#\024\013\000\000\000\3008\340\000"
 1268      27242314 
 1268      0B000000 
 1268      C038E000 
 1269 0216 0000203C 		.ascii	"\000\000 <#\002\002'8 \010\370\210\210\210p\000\000"
 1269      23020227 
 1269      382008F8 
 1269      88888870 
 1269      0000
 1270 0228 203F2020 		.ascii	" ?   \021\016\000\3000\010\010\010\0108\000\007\030"
 1270      20110E00 
 1270      C0300808 
 1270      08083800 
 1270      0718
 1271 023a 20202010 		.ascii	"   \020\010\000\010\370\010\010\010\020\340\000 ?  "
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 32


 1271      080008F8 
 1271      08080810 
 1271      E000203F 
 1271      2020
 1272 024c 20100F00 		.ascii	" \020\017\000\010\370\210\210\350\010\020\000 ?  # "
 1272      08F88888 
 1272      E8081000 
 1272      203F2020 
 1272      2320
 1273 025e 180008F8 		.ascii	"\030\000\010\370\210\210\350\010\020\000 ? \000\003"
 1273      8888E808 
 1273      1000203F 
 1273      200003
 1274 026d 000000C0 		.ascii	"\000\000\000\3000\010\010\0108\000\000\007\030  \"\036"
 1274      30080808 
 1274      38000007 
 1274      18202022 
 1274      1E
 1275 027e 020008F8 		.ascii	"\002\000\010\370\010\000\000\010\370\010 ?!\001\001"
 1275      08000008 
 1275      F808203F 
 1275      210101
 1276 028d 213F2000 		.ascii	"!? \000\010\010\370\010\010\000\000\000  ?  \000\000"
 1276      0808F808 
 1276      08000000 
 1276      20203F20 
 1276      200000
 1277 02a0 00000808 		.ascii	"\000\000\010\010\370\010\010\000\300\200\200\200\177"
 1277      F8080800 
 1277      C0808080 
 1277      7F
 1278 02ad 00000008 		.ascii	"\000\000\000\010\370\210\300(\030\010\000 ? \001&8 "
 1278      F888C028 
 1278      18080020 
 1278      3F200126 
 1278      3820
 1279 02bf 0008F808 		.ascii	"\000\010\370\010\000\000\000\000\000 ?    0\000\010"
 1279      00000000 
 1279      00203F20 
 1279      20202030 
 1279      0008
 1280 02d1 F8F800F8 		.ascii	"\370\370\000\370\370\010\000 ?\000?\000? \000\010\370"
 1280      F8080020 
 1280      3F003F00 
 1280      3F200008 
 1280      F8
 1281 02e2 30C00008 		.ascii	"0\300\000\010\370\010 ? \000\007\030?\000\340\020\010"
 1281      F808203F 
 1281      20000718 
 1281      3F00E010 
 1281      08
 1282 02f3 080810E0 		.ascii	"\010\010\020\340\000\017\020   \020\017\000\010\370"
 1282      000F1020 
 1282      2020100F 
 1282      0008F8
 1283 0302 08080808 		.ascii	"\010\010\010\010\360\000 ?!\001\001\001\000\000\340"
 1283      F000203F 
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 33


 1283      21010101 
 1283      0000E0
 1284 0311 10080808 		.ascii	"\020\010\010\010\020\340\000\017\030$$8PO\000\010\370"
 1284      10E0000F 
 1284      18242438 
 1284      504F0008 
 1284      F8
 1285 0322 88888888 		.ascii	"\210\210\210\210p\000 ? \000\003\0140 \000p\210\010"
 1285      7000203F 
 1285      2000030C 
 1285      30200070 
 1285      8808
 1286 0334 08083800 		.ascii	"\010\0108\000\0008 !!\"\034\000\030\010\010\370\010"
 1286      00382021 
 1286      21221C00 
 1286      180808F8 
 1286      08
 1287 0345 08180000 		.ascii	"\010\030\000\000\000 ? \000\000\000\010\370\010\000"
 1287      00203F20 
 1287      00000008 
 1287      F80800
 1288 0354 0008F808 		.ascii	"\000\010\370\010\000\037    \037\000\010x\210\000\000"
 1288      001F2020 
 1288      20201F00 
 1288      08788800 
 1288      00
 1289 0365 C8380800 		.ascii	"\3108\010\000\000\0078\016\001\000\000\370\010\000\370"
 1289      0007380E 
 1289      010000F8 
 1289      0800F8
 1290 0374 0008F800 		.ascii	"\000\010\370\000\003<\007\000\007<\003\000\010\030h"
 1290      033C0700 
 1290      073C0300 
 1290      081868
 1291 0383 80806818 		.ascii	"\200\200h\030\010 0,\003\003,0 \0108\310\000\3108\010"
 1291      0820302C 
 1291      03032C30 
 1291      200838C8 
 1291      00C83808 
 1292 0397 00000020 		.ascii	"\000\000\000 ? \000\000\000\020\010\010\010\3108\010"
 1292      3F200000 
 1292      00100808 
 1292      08C83808 
 1293 03a7 00203826 		.ascii	"\000 8&!  \030\000\000\000\000\376\002\002\002\000\000"
 1293      21202018 
 1293      00000000 
 1293      FE020202 
 1293      0000
 1294 03b9 00007F40 		.ascii	"\000\000\177@@@\000\000\0140\300\000\000\000\000\000"
 1294      40400000 
 1294      0C30C000 
 1294      00000000 
 1295 03c9 00000106 		.ascii	"\000\000\001\0068\300\000\000\002\002\002\376\000\000"
 1295      38C00000 
 1295      020202FE 
 1295      0000
 1296 03d7 00004040 		.ascii	"\000\000@@@\177\000\000\000\000\000\004\002\002\002"
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 34


 1296      407F0000 
 1296      00000004 
 1296      020202
 1297 03e6 04000000 		.ascii	"\004\000\000\000\000\000\000\000\000\000\000\000\000"
 1297      00000000 
 1297      00000000 
 1297      00
 1298 03f3 00000000 		.ascii	"\000\000\000\000\000\200\200\200\200\200\200\200\200"
 1298      00808080 
 1298      80808080 
 1298      80
 1299 0400 00020204 		.ascii	"\000\002\002\004\000\000\000\000\000\000\000\000\000"
 1299      00000000 
 1299      00000000 
 1299      00
 1300 040d 00000000 		.ascii	"\000\000\000\000\000\200\200\200\200\000\000\000\031"
 1300      00808080 
 1300      80000000 
 1300      19
 1301 041a 24222222 		.ascii	"$\"\"\"? \010\370\000\200\200\000\000\000\000?\021 "
 1301      3F2008F8 
 1301      00808000 
 1301      0000003F 
 1301      1120
 1302 042c 20110E00 		.ascii	" \021\016\000\000\000\000\200\200\200\000\000\000\016"
 1302      00000080 
 1302      80800000 
 1302      000E
 1303 043a 11202020 		.ascii	"\021   \021\000\000\000\000\200\200\210\370\000\000"
 1303      11000000 
 1303      00808088 
 1303      F80000
 1304 0449 0E112020 		.ascii	"\016\021  \020? \000\000\200\200\200\200\000\000\000"
 1304      103F2000 
 1304      00808080 
 1304      80000000 
 1305 0459 1F222222 		.ascii	"\037\"\"\"\"\023\000\000\200\200\360\210\210\210\030"
 1305      22130000 
 1305      8080F088 
 1305      888818
 1306 0468 0020203F 		.ascii	"\000  ?  \000\000\000\000\200\200\200\200\200\000\000"
 1306      20200000 
 1306      00008080 
 1306      80808000 
 1306      00
 1307 0479 6B949494 		.ascii	"k\224\224\224\223`\000\010\370\000\200\200\200\000\000"
 1307      93600008 
 1307      F8008080 
 1307      800000
 1308 0488 203F2100 		.ascii	" ?!\000\000 ? \000\200\230\230\000\000\000\000\000 "
 1308      00203F20 
 1308      00809898 
 1308      00000000 
 1308      0020
 1309 049a 203F2020 		.ascii	" ?  \000\000\000\000\000\200\230\230\000\000\000\300"
 1309      00000000 
 1309      00809898 
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 35


 1309      000000C0 
 1310 04aa 8080807F 		.ascii	"\200\200\200\177\000\000\010\370\000\000\200\200\200"
 1310      000008F8 
 1310      00008080 
 1310      80
 1311 04b7 00203F24 		.ascii	"\000 ?$\002-0 \000\000\010\010\370\000\000\000\000\000"
 1311      022D3020 
 1311      00000808 
 1311      F8000000 
 1311      0000
 1312 04c9 20203F20 		.ascii	"  ?  \000\000\200\200\200\200\200\200\200\000 ? \000"
 1312      20000080 
 1312      80808080 
 1312      80800020 
 1312      3F2000
 1313 04dc 3F20003F 		.ascii	"? \000?\200\200\000\200\200\200\000\000 ?!\000\000 "
 1313      80800080 
 1313      80800000 
 1313      203F2100 
 1313      0020
 1314 04ee 3F200000 		.ascii	"? \000\000\200\200\200\200\000\000\000\037    \037\000"
 1314      80808080 
 1314      0000001F 
 1314      20202020 
 1314      1F00
 1315 0500 80800080 		.ascii	"\200\200\000\200\200\000\000\000\200\377\241  \021\016"
 1315      80000000 
 1315      80FFA120 
 1315      20110E
 1316 050f 00000000 		.ascii	"\000\000\000\000\200\200\200\200\000\000\016\021  \240"
 1316      80808080 
 1316      00000E11 
 1316      2020A0
 1317 051e FF808080 		.ascii	"\377\200\200\200\200\000\200\200\200\000  ?! \000\001"
 1317      80008080 
 1317      80002020 
 1317      3F212000 
 1317      01
 1318 052f 00000080 		.ascii	"\000\000\000\200\200\200\200\200\000\0003$$$$\031\000"
 1318      80808080 
 1318      00003324 
 1318      24242419 
 1318      00
 1319 0540 008080E0 		.ascii	"\000\200\200\340\200\200\000\000\000\000\000\037  \000"
 1319      80800000 
 1319      0000001F 
 1319      202000
 1320 054f 00808000 		.ascii	"\000\200\200\000\000\000\200\200\000\000\037   \020"
 1320      00008080 
 1320      00001F20 
 1320      202010
 1321 055e 3F208080 		.ascii	"? \200\200\200\000\000\200\200\200\000\001\0160\010"
 1321      80000080 
 1321      80800001 
 1321      0E3008
 1322 056d 06010080 		.ascii	"\006\001\000\200\200\000\200\000\200\200\200\0170\014"
 1322      80008000 
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 36


 1322      8080800F 
 1322      300C
 1323 057b 030C300F 		.ascii	"\003\0140\017\000\000\200\200\000\200\200\200\000\000"
 1323      00008080 
 1323      00808080 
 1323      0000
 1324 0589 20312E0E 		.ascii	" 1.\0161 \000\200\200\200\000\000\200\200\200\200\201"
 1324      31200080 
 1324      80800000 
 1324      80808080 
 1324      81
 1325 059a 8E701806 		.ascii	"\216p\030\006\001\000\000\200\200\200\200\200\200\000"
 1325      01000080 
 1325      80808080 
 1325      8000
 1326 05a8 0021302C 		.ascii	"\000!0,\"!0\000\000\000\000\000\200|\002\002\000\000"
 1326      22213000 
 1326      00000000 
 1326      807C0202 
 1326      0000
 1327 05ba 0000003F 		.ascii	"\000\000\000?@@\000\000\000\000\377\000\000\000\000"
 1327      40400000 
 1327      0000FF00 
 1327      000000
 1328 05c9 000000FF 		.ascii	"\000\000\000\377\000\000\000\000\002\002|\200\000\000"
 1328      00000000 
 1328      02027C80 
 1328      0000
 1329 05d7 00004040 		.ascii	"\000\000@@?\000\000\000\000\000\006\001\001\002\002"
 1329      3F000000 
 1329      00000601 
 1329      010202
 1330 05e6 04040000 		.ascii	"\004\004\000\000\000\000\000\000\000\000"
 1330      00000000 
 1330      0000
 1331              		.section	.rodata.Hzk,"a"
 1332              		.align	2
 1333              		.set	.LANCHOR3,. + 0
 1336              	Hzk:
 1337 0000 200841F8 		.ascii	" \010A\370\006\006\300\0010\200\010\200\004@z "
 1337      0606C001 
 1337      30800880 
 1337      04407A20 
 1338 0010 8233021C 		.ascii	"\2023\002\034\002\014\0023\342`\036@\002\300\000\200"
 1338      020C0233 
 1338      E2601E40 
 1338      02C00080 
 1339 0020 0000E000 		.ascii	"\000\000\340\000\341\377A\200A\200A\200A\200A\200"
 1339      E1FF4180 
 1339      41804180 
 1339      41804180 
 1340 0030 41804180 		.ascii	"A\200A\200A\200A\200A\200\377\200\000\200\000\370"
 1340      41804180 
 1340      4180FF80 
 1340      008000F8 
 1341 0040 40C04640 		.ascii	"@\300F@\314?\000@\000@\210\210\310\210\250\210"
 1341      CC3F0040 
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 37


 1341      00408888 
 1341      C888A888 
 1342 0050 98089708 		.ascii	"\230\010\227\010\350\377\210\010\210\010\210\010\210"
 1342      E8FF8808 
 1342      88088808 
 1342      88
 1343 005d 080808   		.ascii	"\010\010\010"
 1344 0060 08820882 		.ascii	"\010\202\010\202\377\377\010\001\210\000\010\002$\002"
 1344      FFFF0801 
 1344      88000802 
 1344      2402
 1345 006e 289A     		.ascii	"(\232"
 1346 0070 3496D463 		.ascii	"4\226\324c'b$2<\\$D$\302$\202"
 1346      27622432 
 1346      3C5C2444 
 1346      24C22482 
 1347              		.text
 1348              	.Letext0:
 1349              		.file 2 "c:\\env\\tools\\gnu_gcc\\arm_gcc\\mingw\\arm-none-eabi\\include\\machine\\_default_types.
 1350              		.file 3 "c:\\env\\tools\\gnu_gcc\\arm_gcc\\mingw\\arm-none-eabi\\include\\sys\\_stdint.h"
 1351              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 1352              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1353              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1354              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1355              		.file 8 "Core/Inc/i2c.h"
 1356              		.file 9 "oled/oledfont.h"
 1357              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\15892\AppData\Local\Temp\ccehA4mb.s 			page 38


DEFINED SYMBOLS
                            *ABS*:00000000 oled.c
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:18     .text.WriteCmd:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:24     .text.WriteCmd:00000000 WriteCmd
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:84     .text.WriteCmd:00000030 $d
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:90     .text.OLED_WR_CMD:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:96     .text.OLED_WR_CMD:00000000 OLED_WR_CMD
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:135    .text.OLED_WR_CMD:00000028 $d
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:140    .text.OLED_WR_DATA:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:146    .text.OLED_WR_DATA:00000000 OLED_WR_DATA
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:185    .text.OLED_WR_DATA:00000028 $d
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:190    .text.OLED_Init:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:196    .text.OLED_Init:00000000 OLED_Init
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:220    .text.OLED_Clear:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:226    .text.OLED_Clear:00000000 OLED_Clear
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:303    .text.OLED_Clearrow:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:309    .text.OLED_Clearrow:00000000 OLED_Clearrow
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:368    .text.OLED_Display_On:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:374    .text.OLED_Display_On:00000000 OLED_Display_On
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:403    .text.OLED_Display_Off:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:409    .text.OLED_Display_Off:00000000 OLED_Display_Off
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:438    .text.OLED_Set_Pos:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:444    .text.OLED_Set_Pos:00000000 OLED_Set_Pos
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:482    .text.OLED_On:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:488    .text.OLED_On:00000000 OLED_On
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:565    .text.oled_pow:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:571    .text.oled_pow:00000000 oled_pow
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:614    .text.OLED_ShowChar:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:620    .text.OLED_ShowChar:00000000 OLED_ShowChar
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:777    .text.OLED_ShowChar:00000088 $d
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:783    .text.OLED_ShowNum:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:789    .text.OLED_ShowNum:00000000 OLED_ShowNum
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:923    .text.OLED_ShowNum:0000008c $d
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:928    .text.OLED_ShowString:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:934    .text.OLED_ShowString:00000000 OLED_ShowString
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:1015   .text.OLED_ShowCHinese:00000000 $t
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:1021   .text.OLED_ShowCHinese:00000000 OLED_ShowCHinese
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:1114   .text.OLED_ShowCHinese:0000004c $d
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:1127   .data.CMD_Data:00000000 CMD_Data
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:1336   .rodata.Hzk:00000000 Hzk
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:1233   .rodata.F8x16:00000000 F8x16
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:1135   .rodata.F6x8:00000000 F6x8
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:1123   .data.CMD_Data:00000000 $d
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:1131   .rodata.F6x8:00000000 $d
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:1229   .rodata.F8x16:00000000 $d
C:\Users\15892\AppData\Local\Temp\ccehA4mb.s:1332   .rodata.Hzk:00000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Mem_Write
hi2c1
HAL_Delay
